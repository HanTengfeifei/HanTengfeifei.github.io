"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[671],{3905:(e,t,a)=>{a.d(t,{Zo:()=>l,kt:()=>h});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),i=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},l=function(e){var t=i(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=i(a),h=r,m=d["".concat(p,".").concat(h)]||d[h]||u[h]||o;return a?n.createElement(m,s(s({ref:t},l),{},{components:a})):n.createElement(m,s({ref:t},l))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=d;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,s[1]=c;for(var i=2;i<o;i++)s[i]=a[i];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},9881:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>i});var n=a(7462),r=(a(7294),a(3905));const o={sidebar_position:1},s="Intro",c={unversionedId:"intro",id:"intro",title:"Intro",description:"This article will show you how to use swapchat-sdk to successfully create various types of chat rooms, such as 1v1 private chats, group chats, twitter spaces based group chats, opensea collection based group chats, and single NFT based threads.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"SwapChat-SDK",permalink:"/docs/Tutorial/SwapChat-SDK"}},p={},i=[{value:"Install swapchat-sdk",id:"install-swapchat-sdk",level:4},{value:"Official start",id:"official-start",level:2},{value:"React Demo",id:"react-demo",level:3},{value:"Twitter 1v1 chat",id:"twitter-1v1-chat",level:4},{value:"Group chat with Twitter space",id:"group-chat-with-twitter-space",level:4},{value:"Opensea 1v1 chat",id:"opensea-1v1-chat",level:4},{value:"Group chat with opensea collection",id:"group-chat-with-opensea-collection",level:4},{value:"Opensea nft item create thread chat",id:"opensea-nft-item-create-thread-chat",level:4},{value:"Discord 1v1 chat",id:"discord-1v1-chat",level:4},{value:"Using swapchat-js in vue",id:"using-swapchat-js-in-vue",level:2}],l={toc:i};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"intro"},"Intro"),(0,r.kt)("p",null,"This article will show you how to use swapchat-sdk to successfully create various types of chat rooms, such as 1v1 private chats, group chats, twitter spaces based group chats, opensea collection based group chats, and single NFT based threads."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"You can install and experience swapchat in chrome first"),(0,r.kt)("p",{parentName:"blockquote"},"Downloads: ",(0,r.kt)("a",{parentName:"p",href:"https://chrome.google.com/webstore/detail/swapchat/cljogniamdljbpeapjdbdigbjmipfpgh"},"https://chrome.google.com/webstore/detail/swapchat/cljogniamdljbpeapjdbdigbjmipfpgh"))),(0,r.kt)("h4",{id:"install-swapchat-sdk"},"Install swapchat-sdk"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"npm install swap-chat-js\nor\nyarn add swap-chat-js\n")),(0,r.kt)("h2",{id:"official-start"},"Official start"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"You need to create an instance of SwapChatSdk Pass in two dom elements as parameters.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The first element is the trigger that brings up the element and the second element is the slot container for the chat tool")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import SwapChatSdk from 'swap-chat-js';\nconst options = {}\nconst params = {}\nconst SwapChatSdkStance = new SwapChatSdk({\n    dom1,\n    dom2,\n    options,\n    params\n  }\n    );\n//  Methods requiring calls to instances instance.exect()\nSwapChatSdkStance.exect()\n")),(0,r.kt)("h3",{id:"react-demo"},"React Demo"),(0,r.kt)("h4",{id:"twitter-1v1-chat"},"Twitter 1v1 chat"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const params = {\n  platform: "twitter",\n  type: "single",\n  room_payload: {\n    user_name: "SwapChatNFT",\n    user_avatar:\n      "https://pbs.twimg.com/profile_images/1506560330876731393/tLk4jXKq_400x400.jpg",\n  },\n};\n')),(0,r.kt)("h4",{id:"group-chat-with-twitter-space"},"Group chat with Twitter space"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const params = {\n      platform: 'twitter',\n      type: 'group',\n      room_payload: {\n        space_id: '1BdxYwElXVoGX',\n        space_title: '\u6d4b\u8bd53',\n      },\n    };\n")),(0,r.kt)("h4",{id:"opensea-1v1-chat"},"Opensea 1v1 chat"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const params = {\n      platform: 'opensea',\n      type: 'single',\n      room_payload: {\n        user_name: 'king250',\n      },\n    };\n")),(0,r.kt)("h4",{id:"group-chat-with-opensea-collection"},"Group chat with opensea collection"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const params = {\n      platform: 'opensea',\n      type: 'group',\n      room_payload: {\n        collection_name: 'founders-coins',\n      },\n    };\n")),(0,r.kt)("h4",{id:"opensea-nft-item-create-thread-chat"},"Opensea nft item create thread chat"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const params = {\n      platform: 'opensea',\n      type: 'thread',\n      room_payload: {\n        opensea_coll_slug: 'yoloholiday',\n        opensea_item_token_id: '4096',\n        opensea_item_contract_address:\n          '0xb5643598496b159263c67bd0d25728713f5aad04',\n        chain_name: 'ethereum',\n      },\n    };\n")),(0,r.kt)("h4",{id:"discord-1v1-chat"},"Discord 1v1 chat"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const params = {\n      platform: 'discord',\n      type: 'single',\n      room_payload: {\n        user_name: '\u65b9\u5ead',\n        user_id: '3162',\n      },\n    };\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import SwapChatSdk from "swap-chat-js";\nimport react, { useEffect, useRef } from "react";\nfunction App() {\n  const buttonRef = useRef();\n  const containRef = useRef();\n  useEffect(() => {\n    const styleOptions = {\n        width: 400,\n        height: 600,\n    }\n    const SwapChatSdkStance = new SwapChatSdk(\n      buttonRef.current,\n      containRef.current,\n      styleOptions,\n      params\n    );\n    SwapChatSdkStance.exect();\n  }, []);\n  return (\n    <div className="App">\n      <button ref={buttonRef}>swapChat</button>\n      <div ref={containRef}></div>\n    </div>\n  );\n}\n\nexport default App;\n')),(0,r.kt)("h2",{id:"using-swapchat-js-in-vue"},"Using swapchat-js in vue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<template>\n  <div class="hello">\n    <button ref="button"></button>\n    <div ref="container"></div>\n  </div>\n</template>\n<script>\nimport { getCurrentInstance } from "vue";\nimport SwapChatSdk from "swap-chat-js";\nexport default {\n  name: "HelloWorld",\n  props: {\n    msg: String,\n  },\n  mounted() {\n    const instance = getCurrentInstance();\n    const SwapChatSdkStance = new SwapChatSdk(\n      instance.refs.button,\n      instance.refs.container,\n      {\n        width: 400,\n        height: 600,\n      },\n      {\n        platform: "discord",\n        type: "single",\n        room_payload: {\n          user_name: "\u65b9\u5ead#3162",\n          //  space_id: \'1MYxNnoyanwxw\',\n        },\n      }\n    );\n    SwapChatSdkStance.exect();\n  },\n};\n<\/script>\n')))}u.isMDXComponent=!0}}]);